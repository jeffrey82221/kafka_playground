version: '3.8'

services:

  kafka:
    image: apache/kafka:latest
    ports:
      - "8092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://linyixundeMacBook-Air.local:8092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  producer-internal:
    image: apache/kafka:latest
    container_name: producer-internal
    depends_on:
      - kafka
    command: >
      bash -c "
      echo 'Waiting for Kafka to be ready...' &&
      sleep 10 &&
      echo 'Creating topic...' &&
      /opt/kafka/bin/kafka-topics.sh --create --topic test-topic --bootstrap-server kafka:9093 --partitions 3 --replication-factor 1 || true &&
      echo 'Starting producer (internal)...' &&
      /opt/kafka/bin/kafka-console-producer.sh --topic test-topic --bootstrap-server kafka:9093
      "
    stdin_open: true
    tty: true

  # Example consumer container (same Docker host, same network)
  consumer-internal:
    image: apache/kafka:latest
    container_name: consumer-internal
    depends_on:
      - kafka
    command: >
      bash -c "
      echo 'Waiting for Kafka to be ready...' &&
      sleep 15 &&
      echo 'Starting consumer (internal)...' &&
      /opt/kafka/bin/kafka-console-consumer.sh --topic test-topic --bootstrap-server kafka:9093 --from-beginning --group internal-group
      "